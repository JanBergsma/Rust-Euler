var N=null,E="",T="t",U="u",searchIndex={};
var R=["Multiples of 3 and 5","A014445 = Even Fibonacci numbers; or, Fibonacci(3*n). `use…","Problem 4 A palindromic number reads the same both ways.…","Smallest multiple","Sum square difference","timeit","lib::problem4","result","A002113Iter"];
searchIndex["lib"]={"doc":E,"i":[[0,"problem1","lib",E,N,N],[5,"sum_of_multiples_of_3_or_5","lib::problem1",R[0],N,[[["u64"]],["u64"]]],[5,"sum_of_multiples_of_3_or_5_brute_force",E,R[0],N,[[["u64"]],["u64"]]],[0,"problem2","lib",E,N,N],[5,"a014445","lib::problem2",R[1],N,[[["u64"]],["u64"]]],[5,"a014445_iter",E,R[1],N,[[["u64"]]]],[17,"A014445",E,E,N,N],[0,"problem3","lib",E,N,N],[5,"largest_prime_factor","lib::problem3","Largest prime factor",N,[[["u64"]],["u64"]]],[5,"factor_brute_force",E,"Brute force integer factorizing. `use…",N,[[["u64"]],[["vec",["u64"]],["u64"]]]],[0,"problem4","lib",E,N,N],[3,R[8],R[6],"A002113 Palindromes in base 10.",N,N],[5,"largest_palindrome_product",E,R[2],N,[[["u32"]],["u64"]]],[5,"largest_palindrome_product_bf",E,R[2],N,[[["u32"]],["u64"]]],[17,"A002113",E,E,N,N],[11,"new",E,E,0,[[["u64"]],["a002113iter"]]],[0,"problem5","lib",E,N,N],[5,"smallest_multiple","lib::problem5",R[3],N,[[["u64"]],["u64"]]],[5,"smallest_multiple_bf",E,R[3],N,[[["u64"]],["u64"]]],[0,"problem6","lib",E,N,N],[5,"sum_square_difference","lib::problem6",R[4],N,[[["u128"]],["u128"]]],[5,"sum_square_difference_bf",E,R[4],N,[[["u128"]],["u128"]]],[11,"from",R[6],E,0,[[[T]],[T]]],[11,"into_iter",E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,"try_from",E,E,0,[[[U]],[R[7]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,"type_id",E,E,0,[[["self"]],["typeid"]]],[11,"borrow_mut",E,E,0,[[["self"]],[T]]],[11,"try_into",E,E,0,[[],[R[7]]]],[11,"next",E,E,0,[[["self"]],[["option",["u64"]],["u64"]]]]],"p":[[3,R[8]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);